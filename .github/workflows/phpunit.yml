name: PHP Tests

on:
  schedule:
    - cron: "0 12 * * *"
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  tests:
    name: PHP ${{ matrix.php-versions }} - ${{ matrix.db-platforms }} - ${{ matrix.mysql-versions }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.2']
        db-platforms: ['MySQLi']
        mysql-versions: ['5.7', '8.0']

    services:
      mysql:
        image: mysql:${{ matrix.mysql-versions }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: doctrine_tests
          MYSQL_USER: tests_user
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

      memcached:
        image: memcached:1.6-alpine
        ports:
          - 11211:11211
        
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer, pecl
          extensions: redis, memcached
          coverage: xdebug
        env:
          update: true

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer update --ansi --no-interaction
          composer remove --ansi --dev --unused -W -- rector/rector phpstan/phpstan friendsofphp/php-cs-fixer nexusphp/cs-config codeigniter/coding-standard
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
      
      - name: Test with PHPUnit
        run: script -e -c "vendor/bin/phpunit --color=always --exclude-group=auto-review ${{ steps.phpunit-coverage-option.outputs.result }}"

      - name: Run Coveralls
        if: matrix.php-versions == '8.2'
        run: |
          composer global require --ansi php-coveralls/php-coveralls:^2.7
          php-coveralls --coverage_clover=build/logs/clover.xml -v
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: PHP ${{ matrix.php-versions }}
        
  coveralls-finish:
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
          carryforward: true
